var Assert;
(function(h){function k(a){return"string"===typeof a?JSON.stringify(a):"symbol"===typeof a?`Symbol(${void 0!==a.description?"'"+a.description+"'":""})`:`${a}`}function l(a,...b){q&&0<b.length&&console.error(a,...b);throw new u(a);}function v(a,b,c){const g=q;q=!1;try{a()}catch(f){if(b(f))return;l(`Exception thrown does not satisfy predicate: ${k(f)}\n${c}`,f)}finally{q=g}l(`Expected exception, but none was thrown\n${c}`)}class u extends Error{}h.AssertionError=u;let q=!0;h.fail=l;h.isTrue=function(a,
b){a||l(b)};h.isFalse=function(a,b){a&&l(b)};h.isNaN=function(a,b){a===a&&l(`Expected NaN, was ${a}\n${b}`,a)};h.equal=function(a,b,c){a!==b&&l(`${k(a)} !== ${k(b)}\n${c}`,a,b)};h.notEqual=function(a,b,c){a===b&&l(`${k(a)} === ${k(b)}\n${c}`,a,b)};h.approx=function(a,b,c,g){Math.abs(a-b)>=c&&l(`${a} !== ${b}\n${g}`,a,b)};const r=function(a,b,c){if(a===b)return!0;if(Array.isArray(a))return Array.isArray(b)&&a.length===b.length&&a.every((g,f)=>c(g,b[f]));if("object"===typeof a&&"object"===typeof b){if(null===
a||null===b)return!1;const g=Object.keys(a).sort(),f=Object.keys(b).sort();return r(g,f,d)&&g.every(m=>c(a[m],b[m]))}return!1},d=(a,b)=>a===b,e=(a,b)=>r(a,b,e);h.shallowEqual=function(a,b,c){r(a,b,d)||l(`${k(a)}\n  !== ${k(b)}\n${c}`,a,b)};h.deepEqual=function(a,b,c){e(a,b)||l(`${k(a)}\n  !== ${k(b)}\n${c}`,a,b)};h.distinct=function(a,b){const c=new Set;for(const g of a)c.has(g)&&l(`${k(g)} in [${a.map(k).join(", ")}]\n${b}`,g,a),c.add(g)};h.distinctByKey=function(a,b,c){const g=new Map;for(const f of a){const m=
b(f);if(g.has(m)){const n=g.get(m);l(`${k(n)} and ${k(f)} share key ${m} in [${a.map(k).join(", ")}]\n${c}`,n,f,m,a)}g.set(m,f)}};h.throws=function(a,b){v(a,()=>!0,b)};h.throwsLike=v})(Assert||={});var Punyt;
(function(h){function k(d,e,a,b){try{e[a].call(e)}catch(c){return console.error(`Exception thrown in ${d}.${a}:`,c),{className:d,methodName:a,result:b,error:c,stackTrace:u(c)}}}function l(d,e){const a=d.name;if(void 0===d.prototype[e])return{className:a,methodName:e,result:"error",error:void 0,stackTrace:`class ${a} has no test method named ${e}`};if(d.prototype[e][q])return{className:a,methodName:e,result:"ignored"};let b;try{b=new d}catch(c){return console.error(`Exception thrown in ${a}.constructor:`,
c),{className:a,methodName:"constructor",result:"error",error:c,stackTrace:u(c)}}return(b.before&&k(a,b,"before","error"))??k(a,b,e,"fail")??(b.after&&k(a,b,"after","error"))??{className:a,methodName:e,result:"pass"}}function v(d){const e={className:d.name,results:[],count:0,pass:0,fail:0,error:0,ignored:0};for(const a of Object.getOwnPropertyNames(d.prototype).sort()){if("constructor"===a||"before"===a||"after"===a)continue;const b=l(d,a);e.results.push(b);"ignored"!==b.result&&++e.count;++e[b.result];
if("error"===b.result)break}return e}function u(d){if(d instanceof Error&&d.stack){d=d.stack;const e=d.lastIndexOf(`at ${k.name}`);return 0<=e?d.substring(0,e).trim():d}return`${d}`}const q=Symbol();h.ignore=function(d,e,a){a.value[q]=!0;return a};const r=[];h.test=function(d){r.push(d)};h.runAll=function(){return r.map(v).sort((d,e)=>d.className.localeCompare(e.className))};h.runOne=function(d,e){const a=r.find(b=>b.name===d);return void 0!==a?l(a,e):{className:d,methodName:e,result:"error",error:void 0,
stackTrace:`No such unit test class ${d}`}};h.runAllInBrowser=function(){function d(f){return`<span style="color:${0===f.count?e.ignored:f.pass===f.count?e.pass:e.fail}">${f.pass}/${f.count} passed</span>${0<f.ignored?`, <span style="color:${e.ignored}">${f.ignored} ignored</span>`:""}`}const e={pass:"green",fail:"red",error:"red",ignored:"grey"};var a=h.runAll(),b={count:0,pass:0,ignored:0};for(var c of a)b.count+=c.count,b.pass+=c.pass,b.ignored+=c.ignored;c=document.body;c.style.display="flex";
c.style.flexDirection="column";c.style.alignItems="flex-start";var g=document.createElement("h2");g.innerHTML=`${a.length} test classes run (total ${d(b)})`;c.appendChild(g);for(const f of a){a=document.createElement("h3");b=document.createElement("code");const m=document.createElement("span");g=document.createElement("span");const n=document.createElement("div");a.style.margin="3px 0";m.innerText="[\u2212]";g.innerHTML=` (${d(f)})`;b.appendChild(m);b.appendChild(document.createTextNode(` ${f.className}`));
a.appendChild(b);a.appendChild(g);a.style.cursor="pointer";a.style.userSelect="none";n.style.margin="1em 2.333em";c.appendChild(a);c.appendChild(n);a.onclick=()=>{n.hidden?(m.innerText="[\u2212]",n.hidden=!1):(m.innerText="[+]",n.hidden=!0)};f.pass+f.ignored===f.count&&a.click();for(const y of f.results){const w=document.createElement("div");function x(p){w.innerHTML=`<code>${p.className}.${p.methodName}</code>: <b style="color:${e[p.result]}">${p.result}</b>`;if("fail"===p.result||"error"===p.result){var t=
document.createElement("pre");t.innerText=p.stackTrace;w.appendChild(t);t=document.createElement("button");t.innerText="Run again";t.onclick=()=>x(h.runOne(p.className,p.methodName));w.appendChild(t)}}x(y);n.appendChild(w)}}}})(Punyt||={});
